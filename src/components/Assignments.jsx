import Markdown from "react-markdown";
import remarkGfm from "remark-gfm";
import CodeLab from "./CodeLab";
import {useState, useEffect, useContext} from "react";
import {Button, CircularProgress} from "@heroui/react";
import ApiService from "../api/ApiService.jsx";
import SubmissionStatus from "./SubmissionStatus.jsx";
import {AuthContext} from "../AuthProvider.jsx";

const assignments = [
    {
        id: 1,
        title: "–í–≤–µ–¥–µ–Ω–∏–µ –≤ p5.js",
        content: `## –í–≤–µ–¥–µ–Ω–∏–µ –≤ p5.js

p5.js –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¥–≤—É—Ö —Ñ—É–Ω–∫—Ü–∏–π:

- \`setup()\` ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
- \`draw()\` ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä (–ø—Ä–∏–º–µ—Ä–Ω–æ 60 —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É)

–í–Ω—É—Ç—Ä–∏ \`setup()\` –æ–±—ã—á–Ω–æ —Å–æ–∑–¥–∞—ë–º —Ö–æ–ª—Å—Ç, –∞ –≤ \`draw()\` —Ä–∏—Å—É–µ–º`,
        starterCode: `function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);
}`,
        hint: "–ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ö–æ–ª—Å—Ç–∞: `createCanvas(600, 400)` –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å `background(200, 200, 255)`"
    },
    {
        id: 2,
        title: "–†–∏—Å–æ–≤–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä",
        content: `## –†–∏—Å—É–µ–º —Ñ–∏–≥—É—Ä—ã

p5.js –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è:

- \`ellipse(x, y, w, h)\`
- \`rect(x, y, w, h)\`
- \`line(x1, y1, x2, y2)\`

–§–∏–≥—É—Ä—ã —Ä–∏—Å—É—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ –≤—ã–∑–æ–≤–∞, –æ—Ç –ø–µ—Ä–≤–æ–π –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π.`,
        starterCode: `function setup() {
  createCanvas(400, 400);
  background(255);
  
  ellipse(100, 100, 80, 80);
  rect(200, 100, 80, 80);
  line(50, 300, 350, 300);
}`,
        hint: "–í—Å–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–∞–¥–∞—é—Ç—Å—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö: `ellipse(100, 100, 50, 50)` ‚Äî –∫—Ä—É–≥ –ø–æ —Ü–µ–Ω—Ç—Ä—É (100,100)"
    },
    {
        id: 3,
        title: "–¶–≤–µ—Ç –∏ —Å—Ç–∏–ª—å",
        content: `## –¶–≤–µ—Ç–∞ –∏ —Å—Ç–∏–ª–∏

p5.js –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç–∏–ª–µ–º —Ñ–∏–≥—É—Ä:

- \`fill(r, g, b)\` ‚Äî –∑–∞–ª–∏–≤–∫–∞
- \`stroke(r, g, b)\` ‚Äî —Ü–≤–µ—Ç –ª–∏–Ω–∏–∏
- \`strokeWeight(pixels)\` ‚Äî —Ç–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–∏
- \`noStroke()\` / \`noFill()\` ‚Äî –æ—Ç–∫–ª—é—á–∏—Ç—å –ª–∏–Ω–∏—é/–∑–∞–ª–∏–≤–∫—É`,
        starterCode: `function setup() {
  createCanvas(400, 400);
  background(255);
  
  fill(255, 0, 0);
  stroke(0);
  strokeWeight(4);
  ellipse(200, 200, 100, 100);
}`,
        hint: "`fill(0, 255, 0)` ‚Äî –∑–µ–ª—ë–Ω–∞—è –∑–∞–ª–∏–≤–∫–∞. `noStroke()` —É–±–∏—Ä–∞–µ—Ç –æ–±–≤–æ–¥–∫—É."
    },
    {
        id: 4,
        title: "–ê–Ω–∏–º–∞—Ü–∏—è",
        content: `## –ê–Ω–∏–º–∞—Ü–∏—è

–ß—Ç–æ–±—ã —á—Ç–æ-—Ç–æ –¥–≤–∏–≥–∞–ª–æ—Å—å ‚Äî –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.

–ó–Ω–∞—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏–∏ \`draw()\`, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä.`,
        starterCode: `let x = 0;

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);
  ellipse(x, 200, 50, 50);
  x += 2;
}`,
        hint: "`x += 2;` ‚Äî —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø—Ä–∞–≤–æ. –ü–æ–ø—Ä–æ–±—É–π –¥–æ–±–∞–≤–∏—Ç—å —É—Å–ª–æ–≤–∏–µ: –µ—Å–ª–∏ x > width, —Å–±—Ä–æ—Å–∏—Ç—å –≤ 0."
    },
    {
        id: 5,
        title: "–í–≤–æ–¥ —Å –º—ã—à–∏",
        content: `## –î–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏

p5.js –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:

- \`mouseX\`, \`mouseY\` ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—ã—à–∏
- \`mouseIsPressed\` ‚Äî –Ω–∞–∂–∞—Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏`,
        starterCode: `function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(240);
  ellipse(mouseX, mouseY, 50, 50);
}`,
        hint: "–ò—Å–ø–æ–ª—å–∑—É–π `mouseIsPressed` —á—Ç–æ–±—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º–µ–Ω—è—Ç—å —Ü–≤–µ—Ç —Ñ–∏–≥—É—Ä—ã –ø—Ä–∏ –∫–ª–∏–∫–µ."
    },
    {
        id: 6,
        title: "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
        content: `## –í–≤–æ–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã

- \`keyIsDown(KEYCODE)\` ‚Äî –∑–∞–∂–∞—Ç–∞ –ª–∏ –∫–ª–∞–≤–∏—à–∞
- \`keyPressed()\`, \`keyReleased()\` ‚Äî —Å–æ–±—ã—Ç–∏—è`,
        starterCode: `let x = 200;

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);

  if (keyIsDown(LEFT_ARROW)) x -= 5;
  if (keyIsDown(RIGHT_ARROW)) x += 5;

  ellipse(x, 200, 50, 50);
}`,
        hint: "`LEFT_ARROW`, `RIGHT_ARROW` ‚Äî —ç—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∫–ª–∞–≤–∏—à."
    },
    {
        id: 7,
        title: "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ª–æ–≥–∏–∫–∞",
        content: `## –†–∞–±–æ—Ç–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏

p5.js –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±—ã—á–Ω—ã–π JavaScript. –í—ã –º–æ–∂–µ—Ç–µ:

- –û–±—ä—è–≤–ª—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: \`let r = 255;\`
- –ò–∑–º–µ–Ω—è—Ç—å –∏—Ö –≤–Ω—É—Ç—Ä–∏ draw()
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Ü–≤–µ—Ç–∞—Ö, –ø–æ–∑–∏—Ü–∏—è—Ö –∏ —Ç.–¥.`,
        starterCode: `let size = 50;

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(255);
  ellipse(200, 200, size, size);
}`,
        hint: "–ü–æ–ø—Ä–æ–±—É–π —É–≤–µ–ª–∏—á–∏—Ç—å `size` —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º: `size += 1;`"
    },
    {
        id: 8,
        title: "–£—Å–ª–æ–≤–∏—è",
        content: `## –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã

–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

\`\`\`js
if (mouseX > 200) {
  fill(255, 0, 0);
} else {
  fill(0, 0, 255);
}
\`\`\`

–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ —É—Å–ª–æ–≤–∏—è–º.`,
        starterCode: `function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);

  if (mouseX > width / 2) {
    fill(255, 0, 0);
  } else {
    fill(0, 0, 255);
  }

  ellipse(mouseX, mouseY, 50, 50);
}`,
        hint: "`if (...)` ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–∏—Å–∞—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏–π."
    },
    {
        id: 9,
        title: "–¶–∏–∫–ª—ã",
        content: `## –¶–∏–∫–ª—ã

–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å \`for\`, —á—Ç–æ–±—ã —Ä–∏—Å–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã:

\`\`\`js
for (let i = 0; i < 10; i++) {
  ellipse(i * 40, 100, 30, 30);
}
\`\`\``,
        starterCode: `function setup() {
  createCanvas(400, 400);
  background(255);

  for (let i = 0; i < 10; i++) {
    ellipse(i * 40 + 20, 200, 30, 30);
  }
}`,
        hint: "–¶–∏–∫–ª `for` –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä—è–¥ —Ñ–∏–≥—É—Ä –ø–æ —à–∞–±–ª–æ–Ω—É."
    },
    {
        id: 10,
        title: "–ú–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç",
        content: `## –ú–∏–Ω–∏-–ø—Ä–æ–µ–∫—Ç

–ò—Å–ø–æ–ª—å–∑—É–π –≤—Å—ë, —á—Ç–æ —Ç—ã —É–∑–Ω–∞–ª:

- –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
- –≤–≤–æ–¥ –º—ã—à–∏/–∫–ª–∞–≤–∏—à
- —Ñ–∏–≥—É—Ä—ã –∏ —Ü–≤–µ—Ç–∞
- –¥–≤–∏–∂–µ–Ω–∏–µ –∏ —É—Å–ª–æ–≤–∏—è

–°–¥–µ–ª–∞–π —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ üé®`,
        starterCode: `let x = 200;
let y = 200;

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);
  ellipse(x, y, 50, 50);
}`,
        hint: "–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ–ª–∫–∞–º–∏, —Ü–≤–µ—Ç –ø–æ –Ω–∞–∂–∞—Ç–∏—é –º—ã—à–∏, –∏ –∞–Ω–∏–º–∞—Ü–∏—é."
    }
];


function HintButton({ hint }) {
    const [show, setShow] = useState(false);
    return (
        <div className="mt-2">
            <button
                onClick={() => setShow(!show)}
                className="text-sm underline text-white"
            >
                {show ? "–°–∫—Ä—ã—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É"}
            </button>
            {show && <div className="mt-1 text-sm italic text-gray-300">{hint}</div>}
        </div>
    );
}

export default function Assignments() {
    const [selected, setSelected] = useState(assignments[0]);
    const [code, setCode] = useState(selected.starterCode);

    // —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è ¬´–º–æ–µ–π¬ª —Å–¥–∞—á–∏ –∏ –µ—ë –∑–∞–≥—Ä—É–∑–∫–∏
    const [submission, setSubmission] = useState(null);
    const [loadingSub, setLoadingSub] = useState(false);

    // –ø—Ä–∏ —Å–º–µ–Ω–µ –∑–∞–¥–∞–Ω–∏—è: –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥ + –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—é —Å–¥–∞—á—É
    useEffect(() => {
        const key = `code-task-${selected.id}`;
        const saved = localStorage.getItem(key);
        setCode(saved || selected.starterCode);

        setLoadingSub(true);
        ApiService.submissions
            .my(selected.id)
            .then((r) => setSubmission(r.data))
            .catch(() => setSubmission(null))   // –µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–¥–∞–≤–∞–ª–∏
            .finally(() => setLoadingSub(false));
    }, [selected]);

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –≤ localStorage
    useEffect(() => {
        localStorage.setItem(`code-task-${selected.id}`, code);
    }, [code, selected.id]);

    // –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
    const handleSubmit = () => {
        ApiService.submissions
            .submit({ assignmentId: selected.id, answer: code })
            .then((r) => setSubmission(r.data))
            .catch((e) => {
                console.error(e);
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ");
            });
    };

    // —Ä–∞–∑–º–µ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
    let bottom;
    if (loadingSub) {
        bottom = <CircularProgress aria-label="–ó–∞–≥—Ä—É–∑–∫–∞" />;
    } else if (!submission) {
        // –µ—â—ë –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏
        bottom = (
            <Button color="primary" onPress={handleSubmit}>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
            </Button>
        );
    } else if (submission.grade == null) {
        // –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –∂–¥—ë–º –æ—Ü–µ–Ω–∫–∏
        bottom = (
            <div className="text-gray-400 italic">
                –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ‚Äî –∂–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫–∏
            </div>
        );
    } else {
        // –µ—Å—Ç—å –æ—Ü–µ–Ω–∫–∞
        bottom = (
            <div className="space-y-2 p-4 mt-4 bg-gray-800 rounded">
                <div>
                    <strong>–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞:</strong> {submission.grade}
                </div>
                <div>
                    <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:</strong>
                    <div className="mt-1 p-2 bg-gray-900 rounded whitespace-pre-wrap">
                        {submission.comment}
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="flex h-screen bg-black text-white">
            {/* –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
            <nav className="w-60 border-r border-gray-800 p-4 bg-black">
                <h2 className="text-2xl font-bold mb-4">–ö—É—Ä—Å p5.js</h2>
                <ul className="space-y-2">
                    {assignments.map((a) => (
                        <li
                            key={a.id}
                            onClick={() => setSelected(a)}
                            className={`cursor-pointer hover:text-gray-400 ${
                                selected.id === a.id
                                    ? "text-gray-200 font-semibold"
                                    : "text-gray-400"
                            }`}
                        >
                            {a.id}. {a.title}
                        </li>
                    ))}
                </ul>
            </nav>

            {/* –æ—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ */}
            <main className="flex-1 p-6 overflow-y-auto bg-black">
                <h1 className="text-3xl font-bold mb-4">{selected.title}</h1>

                {/* –∫–æ–Ω—Ç–µ–Ω—Ç */}
                <div className="prose prose-invert max-w-none mb-6">
                    <Markdown
                        remarkPlugins={[remarkGfm]}
                        components={{
                            h1: ({ node, ...props }) => (
                                <h1 className="text-2xl font-bold mb-3" {...props} />
                            ),
                            h2: ({ node, ...props }) => (
                                <h2 className="text-xl font-semibold mb-2" {...props} />
                            ),
                            p: ({ node, ...props }) => <p className="mb-2" {...props} />,
                            ul: ({ node, ...props }) => (
                                <ul className="list-disc ml-5 mb-2" {...props} />
                            ),
                            code: ({ node, ...props }) => (
                                <code className="bg-gray-900 rounded px-1 py-0.5" {...props} />
                            ),
                        }}
                    >
                        {selected.content}
                    </Markdown>
                </div>

                <HintButton hint={selected.hint} />

                <div className="mt-6">
                    <CodeLab
                        key={selected.id}
                        code={code}
                        setCode={setCode}
                        executedCode={code}
                        setExecutedCode={() => {}}
                        checkResult={null}
                        setCheckResult={() => {}}
                        onCheck={() => {}}
                    />
                </div>

                {/* –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç—É—Å / –∫–Ω–æ–ø–∫—É / —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
                <div className="mt-6">{bottom}</div>
            </main>
        </div>
    );
}